import {getBadgeColor, getBadgeTitle} from '../utils/utils';
import blockedStore from './BlockedStore';

/**
 * Updates badge text and color only for the selected tab
 * @param {number} tabId
 */
const updateBadge = tabId => {
  chrome.tabs.get(tabId, tab => {
    // The tab obj may not be available, ie. when a tab is being preloaded in the background
    if (tab) {
      const count = blockedStore.getString(tabId);
      chrome.browserAction.setBadgeText({text: count, tabId});
      chrome.browserAction.setBadgeBackgroundColor({color: getBadgeColor(count), tabId});
      chrome.browserAction.setTitle({title: getBadgeTitle(count), tabId});
    } else {
      if (chrome.runtime.lastError && chrome.runtime.lastError.message.includes(`${tabId}`)) {
        // This is generated by a temporary tab being preloaded when using the omnibox
        // The tab does not really exist, so remove it from the store to avoid memory leaks
        blockedStore.remove(tabId);
      }
    }
  });
};

export {updateBadge};
